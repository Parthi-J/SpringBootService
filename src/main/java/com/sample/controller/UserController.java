/**
 * 
 */
package com.sample.controller;

import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;

import com.sample.model.User;
import com.sample.repository.UserRepository;

import lombok.extern.log4j.Log4j2;

/**
 * @author user
 *
 */
@RestController
@RequestMapping(value = "api/v1/users")
@Log4j2
public class UserController {

	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@RequestMapping(value = "/test", method = RequestMethod.GET)
	public User userList() {
		log.info("User List...");
		User user = new User();
		user.setEmail("parthij15@gmail.com");
		user.setFirstName("Parthipan");
		user.setLastName("J");
		user.setPhoneNumber("8675540893");
		user.setIsActive(true);
		return user;
	}

	@RequestMapping(value = "", method = RequestMethod.POST) // Map ONLY POST Requests
	public @ResponseBody String addNewUser(@Valid @RequestBody User user) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		log.info(user);

		userRepository.save(user);

		return "User Saved Successfully...";
	}

	@RequestMapping(value = "", method = RequestMethod.GET)
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}

	// Find
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
	public @ResponseBody Long findOne(@PathVariable Long id) {
		return id;
//		return userRepository.findById(id).orElseThrow(() -> new UserNotFoundException(id));
	}
}
